{"version":3,"file":"static/js/43.b4057854.chunk.js","mappings":"oNAGA,MAiBA,EAjB6BA,KAEzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,QAAQ,cACRC,GAAI,CACFC,QAAS,WACTC,UAAW,QACXC,SAAU,QACVC,OAAQ,OACRC,MAAO,OACPC,aAAc,QAEhBC,UAAU,S,cCGhB,MAAMC,GAAwBC,EAAAA,EAAAA,OAAK,IAAM,gCAiEzC,EAzDgBC,IAA2C,IAA1C,MAAEC,EAAK,QAAEC,EAAO,UAAEC,GAAkBH,EACnD,MAAM,aAAEI,IAAiBC,EAAAA,EAAAA,KAEnBC,EAAQ,GADY,EACLL,EAA6B,EAElD,OACEd,EAAAA,EAAAA,KAACoB,EAAAA,GAAU,CACTC,QAAS,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,QAASR,EAAY,CAAEM,QAAS,EAAGC,MAAO,GAAM,CAAC,EACjDE,WAAY,CACVN,MAAOH,EAAYG,EAAQ,EAC3BO,SAToB,EAUpBH,MAAO,CACLI,KAAM,SACNC,eAZkB,EAalBC,OAAQ,KAEVC,UAEF9B,EAAAA,EAAAA,KAAC+B,EAAAA,GAAgB,CAACC,MAAOf,EAAaa,UACpCG,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAACC,GAAIpB,EAAQqB,UAAWC,cAAY,EAAAP,SAAA,EAC1CG,EAAAA,EAAAA,MAACK,EAAAA,GAAgB,CAAAR,SAAA,EACf9B,EAAAA,EAAAA,KAACuC,EAAAA,GAAkB,CACjBP,MAAOf,EACPuB,UAAU,sBAAqBV,SAE9Bf,EAAQ0B,cAEV1B,EAAQ2B,WACP1C,EAAAA,EAAAA,KAAC2C,EAAAA,SAAQ,CAACC,UAAU5C,EAAAA,EAAAA,KAACD,EAAoB,IAAI+B,UAC3C9B,EAAAA,EAAAA,KAACW,EAAqB,CACpBkC,IAAK9B,EAAQ2B,SACbI,IAAK/B,EAAQgC,aAKrBd,EAAAA,EAAAA,MAACe,EAAAA,GAAa,CAAChB,MAAOf,EAAaa,SAAA,EACjC9B,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CAACjB,MAAOf,EAAaa,SAAEf,EAAQgC,QAC3C/C,EAAAA,EAAAA,KAACkD,EAAAA,GAAa,CAAApB,SACXf,EAAQoC,UAAUC,KAAI,CAACC,EAAYvC,KAClCd,EAAAA,EAAAA,KAACsD,EAAAA,GAAU,CAACtB,MAAOf,EAAaa,SAC7BuB,GADmCvC,QAM1Cd,EAAAA,EAAAA,KAACuD,EAAAA,GAAU,CAAAzB,UACT9B,EAAAA,EAAAA,KAACwD,EAAAA,GAAQ,eAKN,E,8BC5EV,MAAMC,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAItBC,EAAoBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8MAU9BG,EAAgBN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wgBAKfK,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOC,MAGzCH,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOE,KAGzCJ,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOG,KAGzCL,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOI,KAGzCN,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOK,KAGzCP,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOM,K,wBCnC1D,MAAMC,EAAiC,CAAC,MAAO,WAAY,c,cCYlE,MAkCA,EAlCgB9D,IAAiD,IAAhD,cAAE+D,EAAa,iBAAEC,GAAyBhE,EACzD,MAAM,aAAEI,IAAiBC,EAAAA,EAAAA,MACjB4D,EAAGC,IAAcC,EAAAA,EAAAA,MACnBC,EAAchE,IAAiBiE,EAAAA,GACrC,OACElF,EAAAA,EAAAA,KAACgE,EAAa,CAAChC,MAAOf,EAAaa,SAChC6C,EAAevB,KAAK+B,IACnBnF,EAAAA,EAAAA,KAACoF,EAAAA,EAAa,CACZC,QAASA,KACPR,EAAiBM,EAAM,EAEzB7E,SAAU,IAEVgF,MAAOP,EAAUI,GACjBI,YACEN,EAAc,cAAgBhE,EAAauE,QAAQC,OAAOC,SAE5DC,SAAUR,IAAUP,EACpBgB,MACET,IAAUP,EACN3D,EAAauE,QAAQK,UAAUC,KAC/B7E,EAAauE,QAAQC,OAAOM,OAElCC,UACEb,IAAUP,EACN3D,EAAauE,QAAQC,OAAOC,SAC5B,QAdDP,MAkBK,E,cC1CpB,MA2EA,EA3EyBc,KACvB,MAAQnB,EAAGC,IAAcC,EAAAA,EAAAA,MAEnBkB,EAAoB,CACxBnD,KAAMgC,EAAU,yBAChBoB,OAAQ,CAAC,MAAO,cAChB1D,YAAasC,EAAU,gCACvB5B,UAAW,CAAC,QAAS,aAAc,SAAU,MAAO,SAAU,cAC9Df,UAAW,yBACXM,SACE,mFAGE0D,EAAkB,CACtBrD,KAAMgC,EAAU,uBAChBoB,OAAQ,CAAC,MAAO,YAChB1D,YAAasC,EAAU,8BACvB5B,UAAW,CAAC,MAAO,eAAgB,cACnCf,UAAW,+CACXM,SACE,mFAoDJ,MAAO,CAAE2D,aATY,CAxCU,CAC7BtD,KAAMgC,EAAU,qBAChBoB,OAAQ,CAAC,MAAO,YAChB1D,YAAasC,EAAU,4BACvB5B,UAAW,CAAC,SAAU,SAAU,SAChCf,UAAW,qDACXM,SACE,mFAmCF0D,EAhCuB,CACvBrD,KAAMgC,EAAU,qBAChBoB,OAAQ,CAAC,MAAO,YAChB1D,YAAasC,EAAU,4BACvB5B,UAAW,CAAC,QAAS,MAAO,oBAAqB,QAAS,cAC1Df,UAAW,gDACXM,SACE,mFA2BFwD,EAxBmB,CACnBnD,KAAMgC,EAAU,oBAChBoB,OAAQ,CAAC,MAAO,cAChB1D,YAAasC,EAAU,2BACvB5B,UAAW,CAAC,QAAS,MAAO,QAAS,QAAS,cAC9Cf,UAAW,yBACXM,SACE,mFAGuB,CACzBK,KAAMgC,EAAU,0BAChBoB,OAAQ,CAAC,MAAO,cAChB1D,YAAasC,EAAU,iCACvB5B,UAAW,CAAC,YAAa,YAAa,aACtCf,UAAW,uBACXM,SACE,oFAYmB,E,cC/DzB,MAyCA,EAzCwB4D,KACtB,MAAQxB,EAAGC,IAAcC,EAAAA,EAAAA,OACnB,aAAEqB,GAAiBJ,KAClBrB,EAAeC,IAAoB0B,EAAAA,EAAAA,UAAuB,OAC3DC,GAAcC,EAAAA,EAAAA,QAAO,OACrB,UAAEzF,IAAc0F,EAAAA,EAAAA,GAAwBF,GAExCG,EAAmBN,EAAaO,QAAQ7F,GACrCA,EAAQoF,OAAOU,SAASjC,KAGjC,OACE5E,EAAAA,EAAAA,KAAC8G,EAAAA,EAAc,CACb9F,UAAWA,EACX+F,IAAKP,EACLlB,MAAOP,EAAU,iBACjBiC,SAAUjC,EAAU,oBACpBkC,eAAa,EAAAnF,UAEbG,EAAAA,EAAAA,MAACwB,EAAS,CAACyD,GAAIC,EAAAA,EAAWC,SAAStF,SAAA,EACjC9B,EAAAA,EAAAA,KAACqH,EAAO,CACNzC,cAAeA,EACfC,iBAAkBA,KAGpB7E,EAAAA,EAAAA,KAAC8D,EAAiB,CAAAhC,SACf6E,EAAiBvD,KAAI,CAACrC,EAASD,KAE5Bd,EAAAA,EAAAA,KAACsH,EAAO,CAENvG,QAASA,EACTC,UAAWA,EACXF,MAAOA,GAHFA,WASA,C,qJC9Cd,MAAMiB,EAAmB2B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8pBAiBlBK,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOC,MAGzCH,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOE,KAGzCJ,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOG,KAGzCL,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOI,KAGzCN,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOK,KAGzCP,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOM,KAOpDpC,EAAmBoB,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8EAM7Bb,EAAgBU,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oOACjBK,GAAUA,EAAMlC,MAAMwD,QAAQC,OAAO8B,aAW9CtE,EAAcS,EAAAA,GAAO8D,GAAEC,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,qbAMZK,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOE,KAGzCJ,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOG,KAGzCL,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOI,KAGzCN,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOK,KAGzCP,GAAUA,EAAMlC,MAAMmC,YAAYC,OAAOM,KAIrDR,GAAUA,EAAMlC,MAAMwD,QAAQC,OAAOM,SAGpC7C,EAAgBQ,EAAAA,GAAOC,IAAG+D,IAAAA,GAAA7D,EAAAA,EAAAA,GAAA,yGAQ1BP,EAAaI,EAAAA,GAAOiE,KAAIC,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,kEAEzBK,GAAUA,EAAMlC,MAAMwD,QAAQK,UAAUC,OAIvCvD,EAAqBmB,EAAAA,GAAOC,IAAGkE,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,yRAQhCK,GAAUA,EAAMlC,MAAMwD,QAAQC,OAAOM,SAE3B7B,GAAUA,EAAMlC,MAAMwD,QAAQC,OAAO8B,aAM9CO,EAAepE,EAAAA,GAAOqE,IAAGC,IAAAA,GAAAnE,EAAAA,EAAAA,GAAA,6LAMxBK,GAAWA,EAAM+D,UAAY,EAAI,IAIlC1E,EAAaG,EAAAA,GAAOC,IAAGuE,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,2D","sources":["shared/components/skeletons/ProjectImageSkeleton.tsx","components/content/projects/project/Project.tsx","components/content/projects/projects.styles.ts","shared/constants/projectsLabels.ts","components/content/projects/Filters.tsx","components/content/projects/hooks/useProjectsItems.ts","components/content/projects/ProjectsContent.tsx","components/content/projects/project/project.styles.ts"],"sourcesContent":["import { Skeleton } from \"@mui/material\";\nimport React from \"react\";\n\nconst ProjectImageSkeleton = () => {\n  return (\n    <Skeleton\n      variant=\"rectangular\"\n      sx={{\n        bgcolor: \"grey.500\",\n        minHeight: \"220px\",\n        minWidth: \"350px\",\n        height: \"100%\",\n        width: \"100%\",\n        borderRadius: \"10px\",\n      }}\n      animation=\"wave\"\n    />\n  );\n};\n\nexport default ProjectImageSkeleton;\n","import React, { Suspense, lazy } from \"react\";\nimport { Project as ProjectType } from \"shared/constants/types\";\nimport { RawLink } from \"shared/components/RawLink\";\nimport { LinkIcon } from \"../../../../shared/assets/icons/Icons\";\nimport {\n  ProjectContainer,\n  ProjectDescription,\n  TextContainer,\n  ProjectName,\n  TechStackList,\n  Technology,\n  GithubLink,\n  ImageDescription,\n} from \"./project.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport ProjectImageSkeleton from \"shared/components/skeletons/ProjectImageSkeleton\";\nimport * as motion from \"motion/react-client\";\n\nconst ProjectImageComponent = lazy(() => import(\"./ProjectImageComponent\"));\n\ninterface Props {\n  index: number;\n  project: ProjectType;\n  isVisible: boolean;\n}\n\nconst Project = ({ index, project, isVisible }: Props) => {\n  const { currentTheme } = useThemeStore();\n  const animationDuration = 1;\n  const delay = 0.4 + (index * animationDuration) / 3;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0 }}\n      animate={isVisible ? { opacity: 1, scale: 1 } : {}}\n      transition={{\n        delay: isVisible ? delay : 0,\n        duration: animationDuration,\n        scale: {\n          type: \"spring\",\n          visualDuration: animationDuration,\n          bounce: 0.6,\n        },\n      }}\n    >\n      <ProjectContainer theme={currentTheme}>\n        <RawLink to={project.githubUrl} openInNewTab>\n          <ImageDescription>\n            <ProjectDescription\n              theme={currentTheme}\n              className=\"project-description\"\n            >\n              {project.description}\n            </ProjectDescription>\n            {project.imageUrl && (\n              <Suspense fallback={<ProjectImageSkeleton />}>\n                <ProjectImageComponent\n                  src={project.imageUrl}\n                  alt={project.name}\n                />\n              </Suspense>\n            )}\n          </ImageDescription>\n          <TextContainer theme={currentTheme}>\n            <ProjectName theme={currentTheme}>{project.name}</ProjectName>\n            <TechStackList>\n              {project.techStack.map((technology, index) => (\n                <Technology theme={currentTheme} key={index}>\n                  {technology}\n                </Technology>\n              ))}\n            </TechStackList>\n\n            <GithubLink>\n              <LinkIcon />\n            </GithubLink>\n          </TextContainer>\n        </RawLink>\n      </ProjectContainer>\n    </motion.div>\n  );\n};\n\nexport default Project;\n","import { Theme } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  column-gap: 35px;\n  row-gap: 50px;\n  margin-top: 30px;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport const FilterButtons = styled.div<{ theme: Theme }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: row;\n  }\n  gap: 50px;\n  margin-top: 80px;\n`;\n","import { ProjectLabel } from \"./types\";\n\nexport const projectsLabels: ProjectLabel[] = [\"All\", \"Personal\", \"Commercial\"];\n","import { ProjectLabel } from \"shared/constants/types\";\nimport React from \"react\";\nimport { FilterButtons } from \"./projects.styles\";\nimport CircledButton from \"shared/components/CircledButton\";\n\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport { lightTheme } from \"theme/theme\";\nimport { projectsLabels } from \"shared/constants/projectsLabels\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props {\n  selectedLabel: ProjectLabel;\n  setSelectedLabel: React.Dispatch<React.SetStateAction<ProjectLabel>>;\n}\nconst Filters = ({ selectedLabel, setSelectedLabel }: Props) => {\n  const { currentTheme } = useThemeStore();\n  const { t: translate } = useTranslation();\n  const isLightMode = currentTheme === lightTheme;\n  return (\n    <FilterButtons theme={currentTheme}>\n      {projectsLabels.map((label) => (\n        <CircledButton\n          onClick={() => {\n            setSelectedLabel(label);\n          }}\n          minWidth={150}\n          key={label}\n          title={translate(label)}\n          strokeColor={\n            isLightMode ? \"transparent\" : currentTheme.palette.custom.darkGray\n          }\n          isActive={label === selectedLabel}\n          color={\n            label !== selectedLabel\n              ? currentTheme.palette.secondary.main\n              : currentTheme.palette.custom.header\n          }\n          fillColor={\n            label === selectedLabel\n              ? currentTheme.palette.custom.darkGray\n              : \"none\"\n          }\n        />\n      ))}\n    </FilterButtons>\n  );\n};\n\nexport default Filters;\n","import { useTranslation } from \"react-i18next\";\n\nconst useProjectsItems = () => {\n  const { t: translate } = useTranslation();\n\n  const carpoolingProject = {\n    name: translate(\"projectCarpoolingName\"),\n    labels: [\"All\", \"Commercial\"],\n    description: translate(\"projectCarpoolingDescription\"),\n    techStack: [\"React\", \"Typescript\", \"NestJs\", \"MUI\", \"Prisma\", \"WebSockets\"],\n    githubUrl: \"https://turmsride.com/\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/a99c78e9-2ce5-46e7-896b-cc0b8b8a92b3\",\n  };\n\n  const splitterProject = {\n    name: translate(\"projectSplitterName\"),\n    labels: [\"All\", \"Personal\"],\n    description: translate(\"projectSplitterDescription\"),\n    techStack: [\"IOS\", \"React Native\", \"Typescript\"],\n    githubUrl: \"https://github.com/kacperwolanski/smartsplit\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/c3b83510-fc06-4978-9d9a-d76abbaafca1\",\n  };\n\n  const faceRecognitionProject = {\n    name: translate(\"projectPythonName\"),\n    labels: [\"All\", \"Personal\"],\n    description: translate(\"projectPythonDescription\"),\n    techStack: [\"OpenCV\", \"Python\", \"Numpy\"],\n    githubUrl: \"https://github.com/kacperwolanski/face_recognition\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/ca01181f-bbd2-4537-89a9-d13e38ede27e\",\n  };\n\n  const portfolioProject = {\n    name: translate(\"projectResumeName\"),\n    labels: [\"All\", \"Personal\"],\n    description: translate(\"projectResumeDescription\"),\n    techStack: [\"React\", \"MUI\", \"Styled Components\", \"Figma\", \"Typescript\"],\n    githubUrl: \"https://github.com/kacperwolanski/myPortfolio\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/28189279-a886-41f7-96a5-4d63bc9ee7dd\",\n  };\n\n  const dottvProject = {\n    name: translate(\"projectDotTvName\"),\n    labels: [\"All\", \"Commercial\"],\n    description: translate(\"projectDotTvDescription\"),\n    techStack: [\"React\", \"MUI\", \"CI/CD\", \"Figma\", \"Typescript\"],\n    githubUrl: \"https://www.dottv.app/\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/b4a2f68d-4bbb-4b66-a053-7ab60893f9c8\",\n  };\n\n  const motoAdviserProject = {\n    name: translate(\"projectMotoAdvisorName\"),\n    labels: [\"All\", \"Commercial\"],\n    description: translate(\"projectMotoAdvisorDescription\"),\n    techStack: [\"Wordpress\", \"Elementor\", \"Yoast SEO\"],\n    githubUrl: \"https://kiliauto.pl/\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/9cc39662-fff7-4d8d-a70d-661d00a91c48\",\n  };\n\n  const projectItems = [\n    faceRecognitionProject,\n    splitterProject,\n    portfolioProject,\n    carpoolingProject,\n    dottvProject,\n    motoAdviserProject,\n  ];\n\n  return { projectItems };\n};\n\nexport default useProjectsItems;\n","import React, { useRef, useState } from \"react\";\nimport ContentSection from \"shared/components/contentSection/ContentSection\";\nimport Project from \"./project/Project\";\nimport { ProjectLabel } from \"shared/constants/types\";\nimport { Container, ProjectsContainer } from \"./projects.styles\";\nimport Filters from \"./Filters\";\nimport { sectionIds } from \"shared/constants/sectionsIds\";\nimport { useTranslation } from \"react-i18next\";\nimport useProjectsItems from \"./hooks/useProjectsItems\";\nimport useIntersectionObserver from \"shared/hooks/useIntrsectionObserver\";\n\nconst ProjectsContent = () => {\n  const { t: translate } = useTranslation();\n  const { projectItems } = useProjectsItems();\n  const [selectedLabel, setSelectedLabel] = useState<ProjectLabel>(\"All\");\n  const projectsRef = useRef(null);\n  const { isVisible } = useIntersectionObserver(projectsRef);\n\n  const filteredProjects = projectItems.filter((project) => {\n    return project.labels.includes(selectedLabel);\n  });\n\n  return (\n    <ContentSection\n      isVisible={isVisible}\n      ref={projectsRef}\n      title={translate(\"projectsTitle\")}\n      subTitle={translate(\"projectsSubtitle\")}\n      doNotAnimateY\n    >\n      <Container id={sectionIds.projects}>\n        <Filters\n          selectedLabel={selectedLabel}\n          setSelectedLabel={setSelectedLabel}\n        />\n\n        <ProjectsContainer>\n          {filteredProjects.map((project, index) => {\n            return (\n              <Project\n                key={index}\n                project={project}\n                isVisible={isVisible}\n                index={index}\n              />\n            );\n          })}\n        </ProjectsContainer>\n      </Container>\n    </ContentSection>\n  );\n};\nexport default ProjectsContent;\n","import styled from \"styled-components\";\nimport { Theme } from \"@mui/material\";\n\nexport const ProjectContainer = styled.div<{ theme: Theme }>`\n  position: relative;\n  display: flex;\n  z-index: 10;\n  flex-direction: column;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: translateY(-10px);\n  }\n  &:hover .project-image {\n    z-index: 0;\n  }\n  &:hover .project-description {\n    z-index: 1;\n    opacity: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    scale: 0.95;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    scale: 0.95;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    scale: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    scale: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    scale: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    scale: 1;\n  }\n  max-width: 700px;\n  max-height: 700px;\n`;\n\nexport const ImageDescription = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n  min-height: 220px;\n`;\nexport const TextContainer = styled.div<{ theme: Theme }>`\n  background: rgba(${(props) => props.theme.palette.custom.background}, 0.2);\n  backdrop-filter: blur(4px);\n  border-radius: 10px;\n  padding: 0px 0 10px 10px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  text-align: left;\n  margin-top: 15px;\n`;\n\nexport const ProjectName = styled.h2<{ theme: Theme }>`\n  font-family: \"Inter\";\n  font-size: 15px;\n  z-index: 10;\n  max-width: 85%;\n  min-height: 60px;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 15px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 18px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 20px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 20px;\n  }\n  font-weight: 600;\n  color: ${(props) => props.theme.palette.custom.header};\n`;\n\nexport const TechStackList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  line-height: 10px;\n  max-width: 300px;\n`;\n\nexport const Technology = styled.span<{ theme: Theme }>`\n  font-weight: 100;\n  color: ${(props) => props.theme.palette.secondary.main};\n  font-size: 14px;\n`;\n\nexport const ProjectDescription = styled.div<{ theme: Theme }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 101%;\n  border-radius: 10px;\n  padding: 20px;\n  color: ${(props) => props.theme.palette.custom.header};\n  z-index: 0;\n  background: rgba(${(props) => props.theme.palette.custom.background}, 0.6);\n  backdrop-filter: blur(4px);\n  transition: z-index 0.3s, opacity 0.3s;\n  opacity: 0;\n`;\n\nexport const ProjectImage = styled.img<{ isLoading: boolean; theme: Theme }>`\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n  position: relative;\n  border-radius: 10px;\n  opacity: ${(props) => (props.isLoading ? 0 : 1)};\n  transition: z-index 0.3s ease-in-out, opacity 0.3s ease-in-out;\n`;\n\nexport const GithubLink = styled.div`\n  position: absolute;\n  top: 30px;\n  right: 0;\n`;\n"],"names":["ProjectImageSkeleton","_jsx","Skeleton","variant","sx","bgcolor","minHeight","minWidth","height","width","borderRadius","animation","ProjectImageComponent","lazy","_ref","index","project","isVisible","currentTheme","useThemeStore","delay","motion","initial","opacity","scale","animate","transition","duration","type","visualDuration","bounce","children","ProjectContainer","theme","_jsxs","RawLink","to","githubUrl","openInNewTab","ImageDescription","ProjectDescription","className","description","imageUrl","Suspense","fallback","src","alt","name","TextContainer","ProjectName","TechStackList","techStack","map","technology","Technology","GithubLink","LinkIcon","Container","styled","div","_templateObject","_taggedTemplateLiteral","ProjectsContainer","_templateObject2","FilterButtons","_templateObject3","props","breakpoints","values","xxs","xs","sm","md","lg","xl","projectsLabels","selectedLabel","setSelectedLabel","t","translate","useTranslation","isLightMode","lightTheme","label","CircledButton","onClick","title","strokeColor","palette","custom","darkGray","isActive","color","secondary","main","header","fillColor","useProjectsItems","carpoolingProject","labels","splitterProject","projectItems","ProjectsContent","useState","projectsRef","useRef","useIntersectionObserver","filteredProjects","filter","includes","ContentSection","ref","subTitle","doNotAnimateY","id","sectionIds","projects","Filters","Project","background","h2","_templateObject4","_templateObject5","span","_templateObject6","_templateObject7","ProjectImage","img","_templateObject8","isLoading","_templateObject9"],"sourceRoot":""}