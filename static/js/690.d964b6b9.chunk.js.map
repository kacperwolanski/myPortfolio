{"version":3,"file":"static/js/690.d964b6b9.chunk.js","mappings":"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","sources":["components/content/myService/service.styles.ts","components/content/myService/components/SingleService.tsx","shared/constants/services.tsx","components/content/myService/MyServiceContent.tsx"],"sourcesContent":["import { Theme } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div<{ theme: Theme }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const Description = styled.p<{ theme: Theme }>`\n  z-index: 10;\n  text-align: center;\n  width: 90%;\n  color: ${(props) => props.theme.palette.secondary.main};\n`;\nexport const ServicesContainer = styled.div<{ theme: Theme }>`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: row;\n  }\n  justify-content: center;\n  gap: 20px;\n  margin-top: 30px;\n`;\n\nexport const SingleServiceContainer = styled.div<{ theme: Theme }>`\n  font-family: Inter;\n\n  border-radius: 20px;\n  display: flex;\n  gap: 30px;\n  flex-direction: column;\n  padding: 20px;\n  width: 100%;\n  z-index: 10;\n  max-width: 400px;\n  background: rgba(256, 256, 256, 0.1);\n  backdrop-filter: blur(10px);\n  &:hover {\n    cursor: pointer;\n    transform: translateY(-5px);\n    background: rgba(256, 256, 256, 0.4);\n    box-shadow: 0px 10px 10px 0px rgba(255, 255, 255, 0.1);\n  }\n  box-shadow: 0px 3px 3px 0px rgba(255, 255, 255, 0.1);\n\n  transition: background 0.5s, transform 0.3s, box-shadow 0.3s ease-in-out;\n  -webkit-backdrop-filter: blur(10px);\n`;\n\nexport const ServiceTitle = styled.header<{ theme: Theme }>`\n  color: ${(props) => props.theme.palette.primary.main};\n  font-weight: 800;\n  font-size: 20px;\n  min-height: 70px;\n`;\nexport const ServiceDescription = styled.p<{ theme: Theme }>`\n  margin-top: 5px;\n  color: ${(props) => props.theme.palette.secondary.main};\n`;\n\nexport const IconWrapper = styled.div`\n  width: 40px;\n  height: 40px;\n`;\n","import React, { useRef } from \"react\";\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport {\n  IconWrapper,\n  ServiceDescription,\n  ServiceTitle,\n  SingleServiceContainer,\n} from \"../service.styles\";\nimport { Service } from \"shared/constants/types\";\nimport { useTranslation } from \"react-i18next\";\nimport { scrollToSection } from \"shared/helpers/scrollToSection\";\nimport { sectionIds } from \"shared/constants/sectionsIds\";\nimport { animated, useSpring } from \"@react-spring/web\";\nimport useIntersectionObserver from \"shared/hooks/useIntrsectionObserver\";\n\ninterface Props {\n  service: Service;\n}\nconst SingleService = ({ service }: Props) => {\n  const { icon, title, description } = service;\n  const containerRef = useRef(null);\n\n  const { currentTheme } = useThemeStore();\n  const { t: translate } = useTranslation();\n\n  const [hoverStyle, setHoverStyle] = useSpring(() => ({\n    scale: 1,\n    config: { tension: 300, friction: 10 },\n  }));\n\n  const handleMouseEnter = () => setHoverStyle({ scale: 1.2 });\n  const handleMouseLeave = () => setHoverStyle({ scale: 1 });\n\n  const handleServiceClick = () => {\n    scrollToSection(sectionIds.contact);\n  };\n\n  return (\n    <SingleServiceContainer\n      ref={containerRef}\n      theme={currentTheme}\n      onClick={handleServiceClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <IconWrapper>\n        <animated.div\n          style={{\n            transform: hoverStyle.scale.interpolate((s) => `scale(${s})`),\n          }}\n        >\n          {icon}\n        </animated.div>\n      </IconWrapper>\n\n      <div>\n        <ServiceTitle theme={currentTheme}>{translate(title)}</ServiceTitle>\n        <ServiceDescription theme={currentTheme}>\n          {translate(description)}\n        </ServiceDescription>\n      </div>\n    </SingleServiceContainer>\n  );\n};\n\nexport default SingleService;\n","import {\n  Appointment,\n  CloudIcon,\n  CodeIcon,\n  CoinIcon,\n} from \"shared/assets/icons/Icons\";\n\nexport const services = [\n  {\n    icon: <Appointment />,\n    title: \"appointmentTitle\",\n    description: \"appointmentDescription\",\n  },\n  {\n    icon: <CoinIcon />,\n    title: \"pricingTitle\",\n    description: \"pricingDescription\",\n  },\n  {\n    icon: <CodeIcon />,\n    title: \"implementTitle\",\n    description: \"implementDescription\",\n  },\n  {\n    icon: <CloudIcon />,\n    title: \"deployTitle\",\n    description: \"deployDescription\",\n  },\n];\n","import { useTranslation } from \"react-i18next\";\nimport ContentSection from \"shared/components/contentSection/ContentSection\";\nimport { useRef } from \"react\";\nimport useIntersectionObserver from \"shared/hooks/useIntrsectionObserver\";\nimport SingleService from \"./components/SingleService\";\nimport { services } from \"shared/constants/services\";\nimport { Service } from \"shared/constants/types\";\nimport { Container, Description, ServicesContainer } from \"./service.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport { sectionIds } from \"shared/constants/sectionsIds\";\n\nconst MyServiceContent = () => {\n  const { t: translate } = useTranslation();\n  const serviceRef = useRef(null);\n  const { isVisible } = useIntersectionObserver(serviceRef);\n\n  const { currentTheme } = useThemeStore();\n  return (\n    <ContentSection\n      isVisible={isVisible}\n      ref={serviceRef}\n      title={translate(\"serviceTitle\")}\n      subTitle={translate(\"serviceSubtitle\")}\n    >\n      <Container id={sectionIds.service}>\n        <Description theme={currentTheme}>\n          {translate(\"serviceDescription\")}\n        </Description>\n\n        <ServicesContainer theme={currentTheme}>\n          {services.map((service: Service) => (\n            <SingleService key={service.title} service={service} />\n          ))}\n        </ServicesContainer>\n      </Container>\n    </ContentSection>\n  );\n};\n\nexport default MyServiceContent;\n"],"names":["Container","styled","div","Description","p","props","theme","palette","secondary","main","ServicesContainer","breakpoints","values","lg","xl","SingleServiceContainer","ServiceTitle","header","primary","ServiceDescription","IconWrapper","_ref","service","icon","title","description","containerRef","useRef","currentTheme","useThemeStore","t","translate","useTranslation","hoverStyle","setHoverStyle","useSpring","scale","config","tension","friction","_jsxs","ref","onClick","handleServiceClick","scrollToSection","sectionIds","contact","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","children","_jsx","animated","style","transform","interpolate","s","services","Appointment","CoinIcon","CodeIcon","CloudIcon","MyServiceContent","serviceRef","isVisible","useIntersectionObserver","ContentSection","subTitle","id","map","SingleService"],"sourceRoot":""}