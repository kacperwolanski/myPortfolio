{"version":3,"file":"static/js/789.4e759cf6.chunk.js","mappings":"uLAEO,MAAMA,EAAqBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6vBAIpBC,GAAUA,EAAMC,MAAMC,YAAYC,OAAOC,MAKzCJ,GAAUA,EAAMC,MAAMC,YAAYC,OAAOE,KAKzCL,GAAUA,EAAMC,MAAMC,YAAYC,OAAOG,KAKzCN,GAAUA,EAAMC,MAAMC,YAAYC,OAAOI,KAKzCP,GAAUA,EAAMC,MAAMC,YAAYC,OAAOK,KAKzCR,GAAUA,EAAMC,MAAMC,YAAYC,OAAOM,KAUpDC,EAAad,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,8dAGZC,GAAUA,EAAMC,MAAMC,YAAYC,OAAOC,MAGzCJ,GAAUA,EAAMC,MAAMC,YAAYC,OAAOE,KAGzCL,GAAUA,EAAMC,MAAMC,YAAYC,OAAOG,KAGzCN,GAAUA,EAAMC,MAAMC,YAAYC,OAAOI,KAGzCP,GAAUA,EAAMC,MAAMC,YAAYC,OAAOK,KAGzCR,GAAUA,EAAMC,MAAMC,YAAYC,OAAOM,KAOpDG,EAAqBhB,EAAAA,GAAOiB,OAAMC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,8QAK9BC,GACbA,EAAMe,WAAaf,EAAMC,MAAMe,QAAQC,OAAOC,SAAW,SACjDlB,GACRA,EAAMe,WACFf,EAAMC,MAAMe,QAAQC,OAAOE,OAC3BnB,EAAMC,MAAMe,QAAQI,UAAUC,OAGbrB,GACnBA,EAAMe,WACFf,EAAMC,MAAMe,QAAQC,OAAOC,SAC3B,6BAMGlB,GACTA,EAAMe,WACF,OAAM,aAAAO,OACOtB,EAAMC,MAAMe,QAAQC,OAAOC,YAC7BlB,GACdA,EAAMe,WAAmD,OAAtCf,EAAMC,MAAMe,QAAQC,OAAOC,WAGtCK,EAAmB3B,EAAAA,GAAOC,IAAG2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,8FAG5BC,GAAWA,EAAMyB,gBAAkB,EAAI,I,uBCjFrD,MAmCA,EAnCsCC,IAAmB,IAAlB,SAAEC,GAAUD,EACjD,MAAM,aAAEE,IAAiBC,EAAAA,EAAAA,MAClBC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASL,EAAS,KACvDM,EAAiBC,IAAsBF,EAAAA,EAAAA,WAAS,GAUvD,OACEG,EAAAA,EAAAA,MAACxC,EAAkB,CAACM,MAAO2B,EAAaQ,SAAA,EACtCC,EAAAA,EAAAA,KAAC3B,EAAU,CAACT,MAAO2B,EAAaQ,SAC7BT,EAASW,KAAI,CAACC,EAA2BC,KACxCH,EAAAA,EAAAA,KAACzB,EAAkB,CACjBX,MAAO2B,EAEP,aAAYW,EAAQE,MACpB1B,WAAYe,EAAeW,QAAUF,EAAQE,MAC7CC,QAASA,IAjBUH,KAC3BL,GAAmB,GACnBS,YAAW,KACTZ,EAAkBQ,GAClBL,GAAmB,EAAM,GACxB,IAAI,EAYgBU,CAAoBL,GAASH,SAE3CG,EAAQE,OALJD,QASXH,EAAAA,EAAAA,KAACd,EAAgB,CAACE,gBAAiBQ,EAAgBG,SAChDN,EAAee,YAEC,E,mCC/ClB,MAAMC,EAAsBlD,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iC,wBCA7C,MAiDA,EAjD2BgD,KACzB,MAAQC,EAAGC,IAAcC,EAAAA,EAAAA,MA6CzB,MAAO,CAAEC,gBADe,CA1CV,CACZC,UAAWH,EAAU,kBACrBI,QAASJ,EAAU,gBACnBK,QAAS,aACTC,SAAUN,EAAU,iBACpBO,WAAY,6BACZC,gBAAiB,CACfR,EAAU,eACVA,EAAU,eACVA,EAAU,eACVA,EAAU,eACVA,EAAU,iBAGG,CACfG,UAAWH,EAAU,qBACrBI,QAASJ,EAAU,mBACnBK,QAAS,WACTC,SAAUN,EAAU,oBACpBO,WAAY,2BACZC,gBAAiB,CACfR,EAAU,kBACVA,EAAU,kBACVA,EAAU,kBACVA,EAAU,kBACVA,EAAU,kBACVA,EAAU,oBAGF,CACVG,UAAWH,EAAU,gBACrBI,QAASJ,EAAU,cACnBK,QAAS,gBACTC,SAAUN,EAAU,eACpBO,WAAY,sCACZC,gBAAiB,CACfR,EAAU,aACVA,EAAU,aACVA,EAAU,gBAKY,E,cCnC5B,MA0CA,EA1C0BS,KACxB,MAAM,aAAE9B,IAAiBC,EAAAA,EAAAA,MACjBmB,EAAGC,EAAS,KAAEU,IAAST,EAAAA,EAAAA,OACzB,gBAAEC,GAAoBJ,IACtBa,GAASC,EAAAA,EAAAA,QAAO,OAChB,UAAEC,IAAcC,EAAAA,EAAAA,GAAwBH,GAE9C,OAAKT,EAAgBa,QAEnB3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAc,CACbH,UAAWA,EACXI,IAAKN,EACLnB,MAAOQ,EAAU,mBACjBkB,SAAUlB,EAAU,sBAAsBb,UAE1CD,EAAAA,EAAAA,MAACW,EAAmB,CAACsB,GAAIC,EAAAA,EAAWC,WAAWlC,SAAA,EAC7CC,EAAAA,EAAAA,KAACkC,EAAAA,EAAgB,CAACC,IAAK,EAAGC,MAAO,IAAKxE,MAAO2B,KAC7CS,EAAAA,EAAAA,KAACqC,EAAY,CAEX/C,SAAUwB,EAAgBb,KAAKqC,IACtB,CACLlC,MAAOkC,EAAKrB,QACZT,SACEV,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACuC,EAAAA,EAAa,CACZzD,OAAM,GAAAG,OAAKqD,EAAKpB,UAChBsB,UAAWF,EAAKrB,QAChBF,UAAWuB,EAAKvB,UAChBC,QAASsB,EAAKtB,QACdyB,UAAWH,EAAKnB,cAElBnB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAa,CAACC,UAAWL,EAAKlB,0BAblCE,EAAKsB,gBAXkB5C,EAAAA,EAAAA,KAAA6C,EAAAA,SAAA,GA+BjB,C,uFChDd,MAAMC,EAAYvF,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+fAKXC,GAAUA,EAAMC,MAAMC,YAAYC,OAAOC,MAGzCJ,GAAUA,EAAMC,MAAMC,YAAYC,OAAOE,KAGzCL,GAAUA,EAAMC,MAAMC,YAAYC,OAAOG,KAGzCN,GAAUA,EAAMC,MAAMC,YAAYC,OAAOI,KAGzCP,GAAUA,EAAMC,MAAMC,YAAYC,OAAOK,KAGzCR,GAAUA,EAAMC,MAAMC,YAAYC,OAAOM,KAMpD2E,EAAUxF,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uEAKpBsF,EAAkBzF,EAAAA,GAAO0F,KAAIxE,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gYAIrCC,GAAUA,EAAMuF,WAAa,qBAGVvF,GAAUA,EAAMC,MAAMC,YAAYC,OAAOE,KAGzCL,GAAUA,EAAMC,MAAMC,YAAYC,OAAOG,KAGzCN,GAAUA,EAAMC,MAAMC,YAAYC,OAAOI,KAGzCP,GAAUA,EAAMC,MAAMC,YAAYC,OAAOK,KAGzCR,GAAUA,EAAMC,MAAMC,YAAYC,OAAOM,KAMrDT,GAAUA,EAAMC,MAAMe,QAAQC,OAAOE,SAGpCqE,EAAW5F,EAAAA,GAAOC,IAAG2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,oXAGVC,GAAUA,EAAMC,MAAMC,YAAYC,OAAOE,KAGzCL,GAAUA,EAAMC,MAAMC,YAAYC,OAAOG,KAGzCN,GAAUA,EAAMC,MAAMC,YAAYC,OAAOI,KAGzCP,GAAUA,EAAMC,MAAMC,YAAYC,OAAOK,KAGzCR,GAAUA,EAAMC,MAAMC,YAAYC,OAAOM,KAGrDT,GAAUA,EAAMC,MAAMe,QAAQyE,QAAQpE,OAGrCqE,EAAW9F,EAAAA,GAAO0F,KAAIK,IAAAA,GAAA5F,EAAAA,EAAAA,GAAA,+BAItB6F,EAAiBhG,EAAAA,GAAOC,IAAGgG,IAAAA,GAAA9F,EAAAA,EAAAA,GAAA,kFAC5BC,GAAUA,EAAMC,MAAMe,QAAQI,UAAUC,O,uBCpEpD,MA6BA,EA7BuBK,IAMT,IANU,OACtBP,EAAM,UACN2D,EAAS,UACTD,EAAS,UACTzB,EAAS,QACTC,GACM3B,EACN,MAAM,aAAEE,IAAiBC,EAAAA,EAAAA,KACzB,OACEM,EAAAA,EAAAA,MAACgD,EAAS,CAAClF,MAAO2B,EAAaQ,SAAA,EAC7BD,EAAAA,EAAAA,MAACiD,EAAO,CAAAhD,SAAA,CACL0C,GACCzC,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAACC,GAAIjB,EAAWkB,cAAY,EAAA5D,UAClCC,EAAAA,EAAAA,KAACgD,EAAe,CAACpF,MAAO2B,EAAc2D,WAAW,EAAKnD,SACnDjB,OAILkB,EAAAA,EAAAA,KAAA,MAAAD,SAAKjB,KAEPkB,EAAAA,EAAAA,KAACmD,EAAQ,CAACvF,MAAO2B,EAAaQ,SAAEyC,QAElC1C,EAAAA,EAAAA,MAACyD,EAAc,CAAC3F,MAAO2B,EAAaQ,SAAA,EAClCC,EAAAA,EAAAA,KAACqD,EAAQ,CAAAtD,SAAEgB,IAAqB,OAAGf,EAAAA,EAAAA,KAACqD,EAAQ,CAAAtD,SAAEiB,SAEtC,C,kFC1CT,MAAM4C,EAAUrG,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAQpBmG,EAAetG,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,8GAOzBoG,EAAWvG,EAAAA,GAAOwG,EAACtF,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,oXAIRC,GAAUA,EAAMC,MAAMC,YAAYC,OAAOE,KAGzCL,GAAUA,EAAMC,MAAMC,YAAYC,OAAOG,KAGzCN,GAAUA,EAAMC,MAAMC,YAAYC,OAAOI,KAGzCP,GAAUA,EAAMC,MAAMC,YAAYC,OAAOK,KAGzCR,GAAUA,EAAMC,MAAMC,YAAYC,OAAOM,KAGrDT,GAAUA,EAAMC,MAAMe,QAAQI,UAAUC,O,uBC5BpD,MAmBA,EAnBoDK,IAAoB,IAAnB,UAAEsD,GAAWtD,EAChE,MAAM,aAAEE,IAAiBC,EAAAA,EAAAA,KACzB,OACEQ,EAAAA,EAAAA,KAAC4D,EAAO,CAAA7D,SACL4C,EAAU1C,KAAI,CAAC+D,EAAU7D,KACxBL,EAAAA,EAAAA,MAAC+D,EAAY,CAAA9D,SAAA,EACXC,EAAAA,EAAAA,KAACiE,EAAAA,EAAU,CACTC,GAAI,CACFC,SAAU,OACVC,MAAO7E,EAAaZ,QAAQI,UAAUC,SAG1CgB,EAAAA,EAAAA,KAAC8D,EAAQ,CAAClG,MAAO2B,EAAaQ,SAAEiE,MAPf7D,MAUb,C,qBCrBVkE,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,KAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,sEACD,S","sources":["shared/components/jobAccordion/jobAccordion.styles.ts","shared/components/jobAccordion/JobAccordion.tsx","components/content/experience/experience.styles.ts","components/content/experience/hooks/useExperienceItems.ts","components/content/experience/ExperienceContent.tsx","shared/components/experienceItem/experienceItem.styles.ts","shared/components/experienceItem/ExperienceItem.tsx","shared/components/subPointsList/subPointsList.styles.ts","shared/components/subPointsList/SubPointsList.tsx","../node_modules/@mui/icons-material/Circle.js"],"sourcesContent":["import { Theme } from \"@mui/material\";\nimport styled from \"styled-components\";\nexport const AccordionContainer = styled.div<{ theme: Theme }>`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 60px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 70px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 80px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 80px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 80px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 100px;\n  }\n  align-items: start;\n  margin-top: 80px;\n  min-height: 400px;\n`;\n\nexport const TitlesList = styled.div<{ theme: Theme }>`\n  display: flex;\n  gap: 20px;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: column;\n  }\n  margin-top: 20px;\n  justify-content: center;\n`;\n\nexport const ElementTitleButton = styled.button<{\n  theme: Theme;\n  isSelected?: boolean;\n}>`\n  border: none;\n  background: ${(props) =>\n    props.isSelected ? props.theme.palette.custom.darkGray : \"none\"};\n  color: ${(props) =>\n    props.isSelected\n      ? props.theme.palette.custom.header\n      : props.theme.palette.secondary.main};\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) =>\n      props.isSelected\n        ? props.theme.palette.custom.darkGray\n        : \"rgba(255, 255, 255, 0.1)\"};\n  }\n  transition: background 0.3s, color 0.2s;\n  width: 160px;\n  height: 50px;\n  border-radius: 10px;\n  border: ${(props) =>\n    props.isSelected\n      ? \"none\"\n      : `1px solid ${props.theme.palette.custom.darkGray}`};\n  border-color: ${(props) =>\n    !props.isSelected ? props.theme.palette.custom.darkGray : \"none\"};\n`;\n\nexport const ContentContainer = styled.div<{ istransitioning: boolean }>`\n  min-height: 360px;\n  width: 100%;\n  opacity: ${(props) => (props.istransitioning ? 0 : 1)};\n  transition: opacity 0.2s;\n`;\n","import React, { useState } from \"react\";\nimport {\n  AccordionContainer,\n  ContentContainer,\n  ElementTitleButton,\n  TitlesList,\n} from \"./jobAccordion.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\n\ninterface AccordionElement {\n  title: string;\n  content: JSX.Element;\n}\n\ninterface Props {\n  elements: AccordionElement[];\n}\n\nconst JobAccordion: React.FC<Props> = ({ elements }) => {\n  const { currentTheme } = useThemeStore();\n  const [currentElement, setCurrentElement] = useState(elements[0]);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  const handleElementChange = (element: AccordionElement) => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setCurrentElement(element);\n      setIsTransitioning(false);\n    }, 200);\n  };\n\n  return (\n    <AccordionContainer theme={currentTheme}>\n      <TitlesList theme={currentTheme}>\n        {elements.map((element: AccordionElement, index: number) => (\n          <ElementTitleButton\n            theme={currentTheme}\n            key={index}\n            data-title={element.title}\n            isSelected={currentElement.title === element.title}\n            onClick={() => handleElementChange(element)}\n          >\n            {element.title}\n          </ElementTitleButton>\n        ))}\n      </TitlesList>\n      <ContentContainer istransitioning={isTransitioning}>\n        {currentElement.content}\n      </ContentContainer>\n    </AccordionContainer>\n  );\n};\n\nexport default JobAccordion;\n","import styled from \"styled-components\";\n\nexport const ExperienceContainer = styled.div`\n  position: relative;\n`;\n","import { useTranslation } from \"react-i18next\";\n\nconst useExperienceItems = () => {\n  const { t: translate } = useTranslation();\n\n  const turms = {\n    startDate: translate(\"turmsStartDate\"),\n    endDate: translate(\"turmsEndDate\"),\n    company: \"Turms Ride\",\n    position: translate(\"turmsPosition\"),\n    companyUrl: \"https://www.turmsride.com/\",\n    skillsSubPoints: [\n      translate(\"turmsSkill1\"),\n      translate(\"turmsSkill2\"),\n      translate(\"turmsSkill3\"),\n      translate(\"turmsSkill4\"),\n      translate(\"turmsSkill5\"),\n    ],\n  };\n  const codespot = {\n    startDate: translate(\"codespotStartDate\"),\n    endDate: translate(\"codespotEndDate\"),\n    company: \"Codespot\",\n    position: translate(\"codespotPosition\"),\n    companyUrl: \"https://www.codespot.io/\",\n    skillsSubPoints: [\n      translate(\"codespotSkill1\"),\n      translate(\"codespotSkill2\"),\n      translate(\"codespotSkill3\"),\n      translate(\"codespotSkill4\"),\n      translate(\"codespotSkill5\"),\n      translate(\"codespotSkill6\"),\n    ],\n  };\n  const sas = {\n    startDate: translate(\"sasStartDate\"),\n    endDate: translate(\"sasEndDate\"),\n    company: \"SAS Institute\",\n    position: translate(\"sasPosition\"),\n    companyUrl: \"https://www.sas.com/pl_pl/home.html\",\n    skillsSubPoints: [\n      translate(\"sasSkill1\"),\n      translate(\"sasSkill2\"),\n      translate(\"sasSkill3\"),\n    ],\n  };\n\n  const experienceItems = [turms, codespot, sas];\n  return { experienceItems };\n};\n\nexport default useExperienceItems;\n","import React, { useRef } from \"react\";\nimport ContentSection from \"shared/components/contentSection/ContentSection\";\nimport JobAccordion from \"shared/components/jobAccordion/JobAccordion\";\nimport SubPointsItem from \"shared/components/experienceItem/ExperienceItem\";\nimport SubPointsList from \"shared/components/subPointsList/SubPointsList\";\nimport { BlurredRectangle } from \"shared/components/BlurredRectangle\";\nimport { ExperienceContainer } from \"./experience.styles\";\nimport { sectionIds } from \"shared/constants/sectionsIds\";\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport { useTranslation } from \"react-i18next\";\nimport useExperienceItems from \"./hooks/useExperienceItems\";\nimport useIntersectionObserver from \"shared/hooks/useIntrsectionObserver\";\n\nconst ExperienceContent = () => {\n  const { currentTheme } = useThemeStore();\n  const { t: translate, i18n } = useTranslation();\n  const { experienceItems } = useExperienceItems();\n  const expRef = useRef(null);\n  const { isVisible } = useIntersectionObserver(expRef);\n\n  if (!experienceItems.length) return <></>;\n  return (\n    <ContentSection\n      isVisible={isVisible}\n      ref={expRef}\n      title={translate(\"experienceTitle\")}\n      subTitle={translate(\"experienceSubtitle\")}\n    >\n      <ExperienceContainer id={sectionIds.experience}>\n        <BlurredRectangle top={0} left={-600} theme={currentTheme} />\n        <JobAccordion\n          key={i18n.language}\n          elements={experienceItems.map((work) => {\n            return {\n              title: work.company,\n              content: (\n                <div>\n                  <SubPointsItem\n                    header={`${work.position}`}\n                    subtitle2={work.company}\n                    startDate={work.startDate}\n                    endDate={work.endDate}\n                    headerUrl={work.companyUrl}\n                  />\n                  <SubPointsList subPoints={work.skillsSubPoints} />\n                </div>\n              ),\n            };\n          })}\n        />\n      </ExperienceContainer>\n    </ContentSection>\n  );\n};\n\nexport default ExperienceContent;\n","import { Theme } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div<{ theme: Theme }>`\n  width: 100%;\n  display: flex;\n\n  flex-direction: row;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: row;\n  }\n  justify-content: space-between;\n  font-family: \"Inter\";\n`;\nexport const Headers = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 10;\n`;\nexport const HeaderContainer = styled.span<{\n  clickable: boolean;\n  theme: Theme;\n}>`\n  ${(props) => props.clickable && \"cursor: pointer;\"};\n  font-size: 16px;\n\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 18px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 20px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 22px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 25px;\n  }\n  font-weight: 400;\n  width: 100%;\n\n  color: ${(props) => props.theme.palette.custom.header};\n`;\n\nexport const Subtitle = styled.div<{ theme: Theme }>`\n  font-size: 12px;\n  z-index: 10;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 12px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 12px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 12px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 14px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 14px;\n  }\n  color: ${(props) => props.theme.palette.primary.main};\n  font-weight: 400;\n`;\nexport const DateItem = styled.span`\n  font-weight: 100;\n`;\n\nexport const DatesContainer = styled.div<{ theme: Theme }>`\n  color: ${(props) => props.theme.palette.secondary.main};\n  font-size: 14px;\n  z-index: 10;\n  margin-top: 10px;\n`;\n","import React from \"react\";\nimport { RawLink } from \"../RawLink\";\nimport {\n  Container,\n  Headers,\n  HeaderContainer,\n  Subtitle,\n  DatesContainer,\n  DateItem,\n} from \"./experienceItem.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\n\ninterface Props {\n  header: string;\n  startDate: string;\n  endDate: string;\n  headerUrl?: string;\n  subtitle2?: string;\n}\n\nconst ExperienceItem = ({\n  header,\n  headerUrl,\n  subtitle2,\n  startDate,\n  endDate,\n}: Props) => {\n  const { currentTheme } = useThemeStore();\n  return (\n    <Container theme={currentTheme}>\n      <Headers>\n        {headerUrl ? (\n          <RawLink to={headerUrl} openInNewTab>\n            <HeaderContainer theme={currentTheme} clickable={true}>\n              {header}\n            </HeaderContainer>\n          </RawLink>\n        ) : (\n          <h3>{header}</h3>\n        )}\n        <Subtitle theme={currentTheme}>{subtitle2}</Subtitle>\n      </Headers>\n      <DatesContainer theme={currentTheme}>\n        <DateItem>{startDate}</DateItem> - <DateItem>{endDate}</DateItem>\n      </DatesContainer>\n    </Container>\n  );\n};\n\nexport default ExperienceItem;\n","import styled from \"styled-components\";\nimport { Theme } from \"@mui/material\";\n\nexport const SubList = styled.div`\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 25px;\n`;\n\nexport const SubContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-left: 15px;\n  margin-top: -15px;\n`;\nexport const SubPoint = styled.p<{ theme: Theme }>`\n  font-weight: 100;\n  font-size: 14px;\n  z-index: 10;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 14px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 20px;\n  }\n  color: ${(props) => props.theme.palette.secondary.main};\n`;\n","import React from \"react\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { SubContainer, SubList, SubPoint } from \"./subPointsList.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\n\ninterface SubPointsListProps {\n  subPoints: string[];\n}\n\nconst SubPointsList: React.FC<SubPointsListProps> = ({ subPoints }) => {\n  const { currentTheme } = useThemeStore();\n  return (\n    <SubList>\n      {subPoints.map((subPoint, index) => (\n        <SubContainer key={index}>\n          <CircleIcon\n            sx={{\n              fontSize: \"10px\",\n              color: currentTheme.palette.secondary.main,\n            }}\n          />\n          <SubPoint theme={currentTheme}>{subPoint}</SubPoint>\n        </SubContainer>\n      ))}\n    </SubList>\n  );\n};\n\nexport default SubPointsList;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2\"\n}), 'Circle');"],"names":["AccordionContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","breakpoints","values","xxs","xs","sm","md","lg","xl","TitlesList","_templateObject2","ElementTitleButton","button","_templateObject3","isSelected","palette","custom","darkGray","header","secondary","main","concat","ContentContainer","_templateObject4","istransitioning","_ref","elements","currentTheme","useThemeStore","currentElement","setCurrentElement","useState","isTransitioning","setIsTransitioning","_jsxs","children","_jsx","map","element","index","title","onClick","setTimeout","handleElementChange","content","ExperienceContainer","useExperienceItems","t","translate","useTranslation","experienceItems","startDate","endDate","company","position","companyUrl","skillsSubPoints","ExperienceContent","i18n","expRef","useRef","isVisible","useIntersectionObserver","length","ContentSection","ref","subTitle","id","sectionIds","experience","BlurredRectangle","top","left","JobAccordion","work","SubPointsItem","subtitle2","headerUrl","SubPointsList","subPoints","language","_Fragment","Container","Headers","HeaderContainer","span","clickable","Subtitle","primary","DateItem","_templateObject5","DatesContainer","_templateObject6","RawLink","to","openInNewTab","SubList","SubContainer","SubPoint","p","subPoint","CircleIcon","sx","fontSize","color","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}