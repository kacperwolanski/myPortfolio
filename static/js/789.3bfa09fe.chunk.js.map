{"version":3,"file":"static/js/789.3bfa09fe.chunk.js","mappings":"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","sources":["shared/components/jobAccordion/jobAccordion.styles.ts","shared/components/jobAccordion/JobAccordion.tsx","components/content/experience/experience.styles.ts","components/content/experience/hooks/useExperienceItems.ts","components/content/experience/ExperienceContent.tsx","shared/components/experienceItem/experienceItem.styles.ts","shared/components/experienceItem/ExperienceItem.tsx","shared/components/subPointsList/subPointsList.styles.ts","shared/components/subPointsList/SubPointsList.tsx","../node_modules/@mui/icons-material/Circle.js"],"sourcesContent":["import { Theme } from \"@mui/material\";\nimport styled from \"styled-components\";\nexport const AccordionContainer = styled.div<{ theme: Theme }>`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 60px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 70px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 80px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 80px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 80px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 100px;\n  }\n  align-items: start;\n  margin-top: 80px;\n  min-height: 400px;\n`;\n\nexport const TitlesList = styled.div<{ theme: Theme }>`\n  display: flex;\n  gap: 20px;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: column;\n  }\n  margin-top: 20px;\n  justify-content: center;\n`;\n\nexport const ElementTitleButton = styled.button<{\n  theme: Theme;\n  isSelected?: boolean;\n}>`\n  border: none;\n  background: ${(props) =>\n    props.isSelected ? props.theme.palette.custom.darkGray : \"none\"};\n  color: ${(props) =>\n    props.isSelected\n      ? props.theme.palette.custom.header\n      : props.theme.palette.secondary.main};\n  &:hover {\n    transform: ${(props) => (!props.isSelected ? \"translateY(-5px)\" : \"\")};\n    cursor: ${(props) => (!props.isSelected ? \"pointer\" : \"default\")};\n    background-color: ${(props) =>\n      props.isSelected\n        ? props.theme.palette.custom.darkGray\n        : \"rgba(255, 255, 255, 0.1)\"};\n  }\n  transition: background 0.3s, color 0.2s, transform 0.3s;\n  width: 160px;\n  height: 50px;\n  border-radius: 10px;\n  border: ${(props) =>\n    props.isSelected\n      ? \"none\"\n      : `1px solid ${props.theme.palette.custom.darkGray}`};\n  border-color: ${(props) =>\n    !props.isSelected ? props.theme.palette.custom.darkGray : \"none\"};\n`;\n\nexport const ContentContainer = styled.div<{ istransitioning: boolean }>`\n  min-height: 360px;\n  width: 100%;\n  opacity: ${(props) => (props.istransitioning ? 0 : 1)};\n  transition: opacity 0.2s;\n`;\n","import React, { useState } from \"react\";\nimport {\n  AccordionContainer,\n  ContentContainer,\n  ElementTitleButton,\n  TitlesList,\n} from \"./jobAccordion.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\n\ninterface AccordionElement {\n  title: string;\n  content: JSX.Element;\n}\n\ninterface Props {\n  elements: AccordionElement[];\n}\n\nconst JobAccordion: React.FC<Props> = ({ elements }) => {\n  const { currentTheme } = useThemeStore();\n  const [currentElement, setCurrentElement] = useState(elements[0]);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  const handleElementChange = (element: AccordionElement) => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setCurrentElement(element);\n      setIsTransitioning(false);\n    }, 200);\n  };\n\n  return (\n    <AccordionContainer theme={currentTheme}>\n      <TitlesList theme={currentTheme}>\n        {elements.map((element: AccordionElement, index: number) => {\n          const buttonSelected = currentElement.title === element.title;\n          return (\n            <ElementTitleButton\n              theme={currentTheme}\n              key={index}\n              data-title={element.title}\n              isSelected={buttonSelected}\n              onClick={() => !buttonSelected && handleElementChange(element)}\n            >\n              <span\n                style={{\n                  zIndex: 10,\n                  color: buttonSelected\n                    ? currentTheme.palette.primary.main\n                    : \"white\",\n                }}\n              >\n                {element.title}\n              </span>\n            </ElementTitleButton>\n          );\n        })}\n      </TitlesList>\n      <ContentContainer istransitioning={isTransitioning}>\n        {currentElement.content}\n      </ContentContainer>\n    </AccordionContainer>\n  );\n};\n\nexport default JobAccordion;\n","import styled from \"styled-components\";\n\nexport const ExperienceContainer = styled.div`\n  position: relative;\n`;\n","import { useTranslation } from \"react-i18next\";\n\nconst useExperienceItems = () => {\n  const { t: translate } = useTranslation();\n\n  const turms = {\n    startDate: translate(\"turmsStartDate\"),\n    endDate: translate(\"turmsEndDate\"),\n    company: \"Turms Ride\",\n    position: translate(\"turmsPosition\"),\n    companyUrl: \"https://www.turmsride.com/\",\n    skillsSubPoints: [\n      translate(\"turmsSkill1\"),\n      translate(\"turmsSkill2\"),\n      translate(\"turmsSkill3\"),\n      translate(\"turmsSkill4\"),\n    ],\n  };\n  const codespot = {\n    startDate: translate(\"codespotStartDate\"),\n    endDate: translate(\"codespotEndDate\"),\n    company: \"Codespot\",\n    position: translate(\"codespotPosition\"),\n    companyUrl: \"https://www.codespot.io/\",\n    skillsSubPoints: [\n      translate(\"codespotSkill1\"),\n      translate(\"codespotSkill2\"),\n      translate(\"codespotSkill3\"),\n      translate(\"codespotSkill4\"),\n      translate(\"codespotSkill5\"),\n      translate(\"codespotSkill6\"),\n    ],\n  };\n  const sas = {\n    startDate: translate(\"sasStartDate\"),\n    endDate: translate(\"sasEndDate\"),\n    company: \"SAS Institute\",\n    position: translate(\"sasPosition\"),\n    companyUrl: \"https://www.sas.com/pl_pl/home.html\",\n    skillsSubPoints: [\n      translate(\"sasSkill1\"),\n      translate(\"sasSkill2\"),\n      translate(\"sasSkill3\"),\n    ],\n  };\n\n  const experienceItems = [turms, codespot, sas];\n  return { experienceItems };\n};\n\nexport default useExperienceItems;\n","import React, { useRef } from \"react\";\nimport ContentSection from \"shared/components/contentSection/ContentSection\";\nimport JobAccordion from \"shared/components/jobAccordion/JobAccordion\";\nimport SubPointsItem from \"shared/components/experienceItem/ExperienceItem\";\nimport SubPointsList from \"shared/components/subPointsList/SubPointsList\";\nimport { BlurredRectangle } from \"shared/components/BlurredRectangle\";\nimport { ExperienceContainer } from \"./experience.styles\";\nimport { sectionIds } from \"shared/constants/sectionsIds\";\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport { useTranslation } from \"react-i18next\";\nimport useExperienceItems from \"./hooks/useExperienceItems\";\nimport useIntersectionObserver from \"shared/hooks/useIntrsectionObserver\";\n\nconst ExperienceContent = () => {\n  const { currentTheme } = useThemeStore();\n  const { t: translate, i18n } = useTranslation();\n  const { experienceItems } = useExperienceItems();\n  const expRef = useRef(null);\n  const { isVisible } = useIntersectionObserver(expRef);\n\n  if (!experienceItems.length) return <></>;\n  return (\n    <ContentSection\n      isVisible={isVisible}\n      ref={expRef}\n      title={translate(\"experienceTitle\")}\n      subTitle={translate(\"experienceSubtitle\")}\n    >\n      <ExperienceContainer id={sectionIds.experience}>\n        <BlurredRectangle top={0} left={-600} theme={currentTheme} />\n        <JobAccordion\n          key={i18n.language}\n          elements={experienceItems.map((work) => {\n            return {\n              title: work.company,\n              content: (\n                <div>\n                  <SubPointsItem\n                    header={`${work.position}`}\n                    subtitle2={work.company}\n                    startDate={work.startDate}\n                    endDate={work.endDate}\n                    headerUrl={work.companyUrl}\n                  />\n                  <SubPointsList subPoints={work.skillsSubPoints} />\n                </div>\n              ),\n            };\n          })}\n        />\n      </ExperienceContainer>\n    </ContentSection>\n  );\n};\n\nexport default ExperienceContent;\n","import { Theme } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div<{ theme: Theme }>`\n  width: 100%;\n  display: flex;\n\n  flex-direction: row;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: row;\n  }\n  justify-content: space-between;\n  font-family: \"Inter\";\n`;\nexport const Headers = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 10;\n`;\nexport const HeaderContainer = styled.span<{\n  clickable: boolean;\n  theme: Theme;\n}>`\n  ${(props) => props.clickable && \"cursor: pointer;\"};\n  font-size: 16px;\n\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 18px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 20px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 22px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 25px;\n  }\n  font-weight: 400;\n  width: 100%;\n\n  color: ${(props) => props.theme.palette.custom.header};\n`;\n\nexport const Subtitle = styled.div<{ theme: Theme }>`\n  font-size: 12px;\n  z-index: 10;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 12px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 12px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 12px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 14px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 14px;\n  }\n  color: ${(props) => props.theme.palette.primary.main};\n  font-weight: 400;\n`;\nexport const DateItem = styled.span`\n  font-weight: 100;\n`;\n\nexport const DatesContainer = styled.div<{ theme: Theme }>`\n  color: ${(props) => props.theme.palette.secondary.main};\n  font-size: 14px;\n  z-index: 10;\n  margin-top: 10px;\n`;\n","import React from \"react\";\nimport { RawLink } from \"../RawLink\";\nimport {\n  Container,\n  Headers,\n  HeaderContainer,\n  Subtitle,\n  DatesContainer,\n  DateItem,\n} from \"./experienceItem.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\n\ninterface Props {\n  header: string;\n  startDate: string;\n  endDate: string;\n  headerUrl?: string;\n  subtitle2?: string;\n}\n\nconst ExperienceItem = ({\n  header,\n  headerUrl,\n  subtitle2,\n  startDate,\n  endDate,\n}: Props) => {\n  const { currentTheme } = useThemeStore();\n  return (\n    <Container theme={currentTheme}>\n      <Headers>\n        {headerUrl ? (\n          <RawLink to={headerUrl} openInNewTab>\n            <HeaderContainer theme={currentTheme} clickable={true}>\n              {header}\n            </HeaderContainer>\n          </RawLink>\n        ) : (\n          <h3>{header}</h3>\n        )}\n        <Subtitle theme={currentTheme}>{subtitle2}</Subtitle>\n      </Headers>\n      <DatesContainer theme={currentTheme}>\n        <DateItem>{startDate}</DateItem> - <DateItem>{endDate}</DateItem>\n      </DatesContainer>\n    </Container>\n  );\n};\n\nexport default ExperienceItem;\n","import styled from \"styled-components\";\nimport { Theme } from \"@mui/material\";\n\nexport const SubList = styled.div`\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 25px;\n`;\n\nexport const SubContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-left: 15px;\n  margin-top: -15px;\n`;\nexport const SubPoint = styled.p<{ theme: Theme }>`\n  font-weight: 100;\n  font-size: 14px;\n  z-index: 10;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 14px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 20px;\n  }\n  color: ${(props) => props.theme.palette.secondary.main};\n`;\n","import React from \"react\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { SubContainer, SubList, SubPoint } from \"./subPointsList.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\n\ninterface SubPointsListProps {\n  subPoints: string[];\n}\n\nconst SubPointsList: React.FC<SubPointsListProps> = ({ subPoints }) => {\n  const { currentTheme } = useThemeStore();\n  return (\n    <SubList>\n      {subPoints.map((subPoint, index) => (\n        <SubContainer key={index}>\n          <CircleIcon\n            sx={{\n              fontSize: \"10px\",\n              color: currentTheme.palette.secondary.main,\n            }}\n          />\n          <SubPoint theme={currentTheme}>{subPoint}</SubPoint>\n        </SubContainer>\n      ))}\n    </SubList>\n  );\n};\n\nexport default SubPointsList;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2\"\n}), 'Circle');"],"names":["AccordionContainer","styled","div","props","theme","breakpoints","values","xxs","xs","sm","md","lg","xl","TitlesList","ElementTitleButton","button","isSelected","palette","custom","darkGray","header","secondary","main","ContentContainer","istransitioning","_ref","elements","currentTheme","useThemeStore","currentElement","setCurrentElement","useState","isTransitioning","setIsTransitioning","_jsxs","children","_jsx","map","element","index","buttonSelected","title","onClick","setTimeout","handleElementChange","style","zIndex","color","primary","content","ExperienceContainer","useExperienceItems","t","translate","useTranslation","experienceItems","startDate","endDate","company","position","companyUrl","skillsSubPoints","ExperienceContent","i18n","expRef","useRef","isVisible","useIntersectionObserver","length","ContentSection","ref","subTitle","id","sectionIds","experience","BlurredRectangle","top","left","JobAccordion","work","SubPointsItem","subtitle2","headerUrl","SubPointsList","subPoints","language","_Fragment","Container","Headers","HeaderContainer","span","clickable","Subtitle","DateItem","DatesContainer","RawLink","to","openInNewTab","SubList","SubContainer","SubPoint","p","subPoint","CircleIcon","sx","fontSize","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}