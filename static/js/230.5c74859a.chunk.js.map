{"version":3,"file":"static/js/230.5c74859a.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/system/esm/colorManipulator.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","shared/components/skeletons/ProjectImageSkeleton.tsx","components/content/projects/project/Project.tsx","components/content/projects/projects.styles.ts","shared/constants/projectsLabels.ts","components/content/projects/Filters.tsx","components/content/projects/hooks/useProjectsItems.ts","components/content/projects/ProjectsContent.tsx","components/content/projects/project/project.styles.ts"],"sourcesContent":["export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n/* eslint-disable @typescript-eslint/naming-convention */\nimport clamp from '@mui/utils/clamp';\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clampWrapper(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n  return clamp(value, min, max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nexport function hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : _formatMuiErrorMessage(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : _formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nexport const colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nexport const private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexport function recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nexport function getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clampWrapper(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nexport function private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nexport function private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return emphasize(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n * @param {string} background - CSS color\n * @param {string} overlay - CSS color\n * @param {number} opacity - Opacity multiplier in the range 0 - 1\n * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.\n */\nexport function blend(background, overlay, opacity, gamma = 1.0) {\n  const blendChannel = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [blendChannel(backgroundColor.values[0], overlayColor.values[0]), blendChannel(backgroundColor.values[1], overlayColor.values[1]), blendChannel(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import { Skeleton } from \"@mui/material\";\nimport React from \"react\";\n\nconst ProjectImageSkeleton = () => {\n  return (\n    <Skeleton\n      variant=\"rectangular\"\n      sx={{\n        bgcolor: \"grey.500\",\n        minHeight: \"220px\",\n        minWidth: \"350px\",\n        height: \"100%\",\n        width: \"100%\",\n        borderRadius: \"10px\",\n      }}\n      animation=\"wave\"\n    />\n  );\n};\n\nexport default ProjectImageSkeleton;\n","import React, { Suspense, lazy } from \"react\";\nimport { Project as ProjectType } from \"shared/constants/types\";\nimport { RawLink } from \"shared/components/RawLink\";\nimport { LinkIcon } from \"../../../../shared/assets/icons/Icons\";\nimport {\n  ProjectContainer,\n  ProjectDescription,\n  TextContainer,\n  ProjectName,\n  TechStackList,\n  Technology,\n  GithubLink,\n  ImageDescription,\n} from \"./project.styles\";\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport ProjectImageSkeleton from \"shared/components/skeletons/ProjectImageSkeleton\";\nimport * as motion from \"motion/react-client\";\n\nconst ProjectImageComponent = lazy(() => import(\"./ProjectImageComponent\"));\n\ninterface Props {\n  index: number;\n  project: ProjectType;\n  isVisible: boolean;\n}\n\nconst Project = ({ index, project, isVisible }: Props) => {\n  const { currentTheme } = useThemeStore();\n  const animationDuration = 1;\n  const delay = 0.4 + (index * animationDuration) / 3;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0 }}\n      animate={isVisible ? { opacity: 1, scale: 1 } : {}}\n      transition={{\n        delay: isVisible ? delay : 0,\n        duration: animationDuration,\n        scale: {\n          type: \"spring\",\n          visualDuration: animationDuration,\n          bounce: 0.6,\n        },\n      }}\n    >\n      <ProjectContainer theme={currentTheme}>\n        <RawLink to={project.githubUrl} openInNewTab>\n          <ImageDescription>\n            <ProjectDescription\n              theme={currentTheme}\n              className=\"project-description\"\n            >\n              {project.description}\n            </ProjectDescription>\n            {project.imageUrl && (\n              <Suspense fallback={<ProjectImageSkeleton />}>\n                <ProjectImageComponent\n                  src={project.imageUrl}\n                  alt={project.name}\n                />\n              </Suspense>\n            )}\n          </ImageDescription>\n          <TextContainer theme={currentTheme}>\n            <ProjectName theme={currentTheme}>{project.name}</ProjectName>\n            <TechStackList>\n              {project.techStack.map((technology, index) => (\n                <Technology theme={currentTheme} key={index}>\n                  {technology}\n                </Technology>\n              ))}\n            </TechStackList>\n\n            <GithubLink>\n              <LinkIcon />\n            </GithubLink>\n          </TextContainer>\n        </RawLink>\n      </ProjectContainer>\n    </motion.div>\n  );\n};\n\nexport default Project;\n","import { Theme } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  column-gap: 35px;\n  row-gap: 50px;\n  margin-top: 30px;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport const FilterButtons = styled.div<{ theme: Theme }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    flex-direction: column;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    flex-direction: row;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    flex-direction: row;\n  }\n  gap: 50px;\n  margin-top: 80px;\n`;\n","import { ProjectLabel } from \"./types\";\n\nexport const projectsLabels: ProjectLabel[] = [\"All\", \"Personal\", \"Commercial\"];\n","import { ProjectLabel } from \"shared/constants/types\";\nimport React from \"react\";\nimport { FilterButtons } from \"./projects.styles\";\nimport CircledButton from \"shared/components/CircledButton\";\n\nimport { useThemeStore } from \"theme/useThemeStore\";\nimport { lightTheme } from \"theme/theme\";\nimport { projectsLabels } from \"shared/constants/projectsLabels\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props {\n  selectedLabel: ProjectLabel;\n  setSelectedLabel: React.Dispatch<React.SetStateAction<ProjectLabel>>;\n}\nconst Filters = ({ selectedLabel, setSelectedLabel }: Props) => {\n  const { currentTheme } = useThemeStore();\n  const { t: translate } = useTranslation();\n  const isLightMode = currentTheme === lightTheme;\n  return (\n    <FilterButtons theme={currentTheme}>\n      {projectsLabels.map((label) => (\n        <CircledButton\n          onClick={() => {\n            setSelectedLabel(label);\n          }}\n          minWidth={150}\n          key={label}\n          title={translate(label)}\n          strokeColor={\n            isLightMode ? \"transparent\" : currentTheme.palette.custom.darkGray\n          }\n          isActive={label === selectedLabel}\n          color={\n            label !== selectedLabel\n              ? currentTheme.palette.secondary.main\n              : currentTheme.palette.custom.header\n          }\n          fillColor={\n            label === selectedLabel\n              ? currentTheme.palette.custom.darkGray\n              : \"none\"\n          }\n        />\n      ))}\n    </FilterButtons>\n  );\n};\n\nexport default Filters;\n","import { useTranslation } from \"react-i18next\";\n\nconst useProjectsItems = () => {\n  const { t: translate } = useTranslation();\n\n  const carpoolingProject = {\n    name: translate(\"projectCarpoolingName\"),\n    labels: [\"All\", \"Commercial\"],\n    description: translate(\"projectCarpoolingDescription\"),\n    techStack: [\"React\", \"Typescript\", \"NestJs\", \"MUI\", \"Prisma\", \"WebSockets\"],\n    githubUrl: \"https://turmsride.com/\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/a99c78e9-2ce5-46e7-896b-cc0b8b8a92b3\",\n  };\n\n  const splitterProject = {\n    name: translate(\"projectSplitterName\"),\n    labels: [\"All\", \"Personal\"],\n    description: translate(\"projectSplitterDescription\"),\n    techStack: [\"IOS\", \"React Native\", \"Typescript\"],\n    githubUrl: \"https://github.com/kacperwolanski/smartsplit\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/c3b83510-fc06-4978-9d9a-d76abbaafca1\",\n  };\n\n  const faceRecognitionProject = {\n    name: translate(\"projectPythonName\"),\n    labels: [\"All\", \"Personal\"],\n    description: translate(\"projectPythonDescription\"),\n    techStack: [\"OpenCV\", \"Python\", \"Numpy\"],\n    githubUrl: \"https://github.com/kacperwolanski/face_recognition\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/ca01181f-bbd2-4537-89a9-d13e38ede27e\",\n  };\n\n  const portfolioProject = {\n    name: translate(\"projectResumeName\"),\n    labels: [\"All\", \"Personal\"],\n    description: translate(\"projectResumeDescription\"),\n    techStack: [\"React\", \"MUI\", \"Styled Components\", \"Figma\", \"Typescript\"],\n    githubUrl: \"https://github.com/kacperwolanski/myPortfolio\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/28189279-a886-41f7-96a5-4d63bc9ee7dd\",\n  };\n\n  const dottvProject = {\n    name: translate(\"projectDotTvName\"),\n    labels: [\"All\", \"Commercial\"],\n    description: translate(\"projectDotTvDescription\"),\n    techStack: [\"React\", \"MUI\", \"CI/CD\", \"Figma\", \"Typescript\"],\n    githubUrl: \"https://www.dottv.app/\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/b4a2f68d-4bbb-4b66-a053-7ab60893f9c8\",\n  };\n\n  const motoAdviserProject = {\n    name: translate(\"projectMotoAdvisorName\"),\n    labels: [\"All\", \"Commercial\"],\n    description: translate(\"projectMotoAdvisorDescription\"),\n    techStack: [\"Wordpress\", \"Elementor\", \"Yoast SEO\"],\n    githubUrl: \"https://kiliauto.pl/\",\n    imageUrl:\n      \"https://github.com/user-attachments/assets/9cc39662-fff7-4d8d-a70d-661d00a91c48\",\n  };\n\n  const projectItems = [\n    faceRecognitionProject,\n    splitterProject,\n    portfolioProject,\n    carpoolingProject,\n    dottvProject,\n    motoAdviserProject,\n  ];\n\n  return { projectItems };\n};\n\nexport default useProjectsItems;\n","import React, { useRef, useState } from \"react\";\nimport ContentSection from \"shared/components/contentSection/ContentSection\";\nimport Project from \"./project/Project\";\nimport { ProjectLabel } from \"shared/constants/types\";\nimport { Container, ProjectsContainer } from \"./projects.styles\";\nimport Filters from \"./Filters\";\nimport { sectionIds } from \"shared/constants/sectionsIds\";\nimport { useTranslation } from \"react-i18next\";\nimport useProjectsItems from \"./hooks/useProjectsItems\";\nimport useIntersectionObserver from \"shared/hooks/useIntrsectionObserver\";\n\nconst ProjectsContent = () => {\n  const { t: translate } = useTranslation();\n  const { projectItems } = useProjectsItems();\n  const [selectedLabel, setSelectedLabel] = useState<ProjectLabel>(\"All\");\n  const projectsRef = useRef(null);\n  const { isVisible } = useIntersectionObserver(projectsRef);\n\n  const filteredProjects = projectItems.filter((project) => {\n    return project.labels.includes(selectedLabel);\n  });\n\n  return (\n    <ContentSection\n      isVisible={isVisible}\n      ref={projectsRef}\n      title={translate(\"projectsTitle\")}\n      subTitle={translate(\"projectsSubtitle\")}\n      doNotAnimateY\n    >\n      <Container id={sectionIds.projects}>\n        <Filters\n          selectedLabel={selectedLabel}\n          setSelectedLabel={setSelectedLabel}\n        />\n\n        <ProjectsContainer>\n          {filteredProjects.map((project, index) => {\n            return (\n              <Project\n                key={index}\n                project={project}\n                isVisible={isVisible}\n                index={index}\n              />\n            );\n          })}\n        </ProjectsContainer>\n      </Container>\n    </ContentSection>\n  );\n};\nexport default ProjectsContent;\n","import styled from \"styled-components\";\nimport { Theme } from \"@mui/material\";\n\nexport const ProjectContainer = styled.div<{ theme: Theme }>`\n  position: relative;\n  display: flex;\n  z-index: 10;\n  flex-direction: column;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: translateY(-10px);\n  }\n  &:hover .project-image {\n    z-index: 0;\n  }\n  &:hover .project-description {\n    z-index: 1;\n    opacity: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xxs}px) {\n    scale: 0.95;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    scale: 0.95;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    scale: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    scale: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    scale: 1;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    scale: 1;\n  }\n  max-width: 700px;\n  max-height: 700px;\n`;\n\nexport const ImageDescription = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n  min-height: 220px;\n`;\nexport const TextContainer = styled.div<{ theme: Theme }>`\n  background: rgba(${(props) => props.theme.palette.custom.background}, 0.2);\n  backdrop-filter: blur(4px);\n  border-radius: 10px;\n  padding: 0px 0 10px 10px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  text-align: left;\n  margin-top: 15px;\n`;\n\nexport const ProjectName = styled.h2<{ theme: Theme }>`\n  font-family: \"Inter\";\n  font-size: 15px;\n  z-index: 10;\n  max-width: 85%;\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xs}px) {\n    font-size: 15px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.sm}px) {\n    font-size: 16px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.md}px) {\n    font-size: 18px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.lg}px) {\n    font-size: 20px;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.values.xl}px) {\n    font-size: 20px;\n  }\n  font-weight: 600;\n  color: ${(props) => props.theme.palette.custom.header};\n`;\n\nexport const TechStackList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  line-height: 10px;\n  max-width: 300px;\n`;\n\nexport const Technology = styled.span<{ theme: Theme }>`\n  font-weight: 100;\n  color: ${(props) => props.theme.palette.secondary.main};\n  font-size: 14px;\n`;\n\nexport const ProjectDescription = styled.div<{ theme: Theme }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 101%;\n  border-radius: 10px;\n  padding: 20px;\n  color: ${(props) => props.theme.palette.custom.header};\n  z-index: 0;\n  background: rgba(${(props) => props.theme.palette.custom.background}, 0.6);\n  backdrop-filter: blur(4px);\n  transition: z-index 0.3s, opacity 0.3s;\n  opacity: 0;\n`;\n\nexport const ProjectImage = styled.img<{ isLoading: boolean; theme: Theme }>`\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n  position: relative;\n  border-radius: 10px;\n  opacity: ${(props) => (props.isLoading ? 0 : 1)};\n  transition: z-index 0.3s ease-in-out, opacity 0.3s ease-in-out;\n`;\n\nexport const GithubLink = styled.div`\n  position: absolute;\n  top: 30px;\n  right: 0;\n`;\n"],"names":["getUnit","input","String","match","toUnitless","length","parseFloat","clampWrapper","value","min","arguments","undefined","max","clamp","decomposeColor","color","type","charAt","slice","re","RegExp","colors","map","n","index","parseInt","Math","round","join","hexToRgb","marker","indexOf","substring","Error","_formatMuiErrorMessage","colorSpace","values","split","shift","recomposeColor","i","alpha","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","_ref","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","content","visibility","maxWidth","_ref2","css","_ref3","action","hover","React","inProps","ref","useDefaultProps","className","component","style","other","_objectWithoutPropertiesLoose","Boolean","children","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","ProjectImageSkeleton","sx","bgcolor","minHeight","minWidth","ProjectImageComponent","lazy","project","isVisible","currentTheme","useThemeStore","delay","motion","initial","opacity","scale","animate","transition","duration","visualDuration","bounce","ProjectContainer","_jsxs","RawLink","to","githubUrl","openInNewTab","ImageDescription","ProjectDescription","description","imageUrl","Suspense","fallback","src","alt","TextContainer","ProjectName","TechStackList","techStack","technology","Technology","GithubLink","LinkIcon","Container","div","ProjectsContainer","FilterButtons","breakpoints","xxs","xs","sm","md","lg","xl","projectsLabels","selectedLabel","setSelectedLabel","translate","useTranslation","isLightMode","lightTheme","label","CircledButton","onClick","title","strokeColor","custom","darkGray","isActive","secondary","main","header","fillColor","useProjectsItems","carpoolingProject","labels","splitterProject","projectItems","ProjectsContent","useState","projectsRef","useRef","useIntersectionObserver","filteredProjects","filter","includes","ContentSection","subTitle","doNotAnimateY","id","sectionIds","projects","Filters","Project","background","h2","span","ProjectImage","img","isLoading"],"sourceRoot":""}